"""Initial migration with timezone support

Revision ID: 924530e008e4
Revises: 
Create Date: 2025-10-09 20:51:06.283265

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '924530e008e4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discord_guilds',
    sa.Column('guild_id', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('member_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guild_id')
    )
    op.create_table('discord_users',
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('display_name', sa.String(length=32), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('is_bot', sa.Boolean(), nullable=False),
    sa.Column('join_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('newsletters',
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('subtitle', sa.String(length=500), nullable=True),
    sa.Column('newsletter_type', sa.Enum('DAILY', 'WEEKLY', 'SPECIAL', name='newslettertype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'GENERATING', 'GENERATED', 'REVIEWING', 'PUBLISHED', 'FAILED', 'CANCELLED', name='newsletterstatus'), nullable=False),
    sa.Column('content_html', sa.Text(), nullable=True),
    sa.Column('content_markdown', sa.Text(), nullable=True),
    sa.Column('content_text', sa.Text(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('estimated_read_time', sa.Integer(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.Column('generation_duration', sa.Float(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('generation_cost', sa.Float(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('human_review_score', sa.Float(), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.Column('buttondown_draft_id', sa.String(length=100), nullable=True),
    sa.Column('buttondown_email_id', sa.String(length=100), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('newsletters', schema=None) as batch_op:
        batch_op.create_index('ix_newsletters_created_at', ['created_at'], unique=False)
        batch_op.create_index('ix_newsletters_scheduled_for', ['scheduled_for'], unique=False)
        batch_op.create_index('ix_newsletters_status', ['status'], unique=False)
        batch_op.create_index('ix_newsletters_type', ['newsletter_type'], unique=False)

    op.create_table('discord_channels',
    sa.Column('channel_id', sa.String(length=20), nullable=False),
    sa.Column('guild_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('channel_type', sa.String(length=20), nullable=False),
    sa.Column('topic', sa.Text(), nullable=True),
    sa.Column('is_monitored', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['guild_id'], ['discord_guilds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('channel_id')
    )
    with op.batch_alter_table('discord_channels', schema=None) as batch_op:
        batch_op.create_index('ix_discord_channels_guild_id', ['guild_id'], unique=False)

    op.create_table('newsletter_generation_logs',
    sa.Column('newsletter_id', sa.UUID(), nullable=False),
    sa.Column('step_name', sa.String(length=100), nullable=False),
    sa.Column('agent_name', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('api_calls', sa.Integer(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_traceback', sa.Text(), nullable=True),
    sa.Column('step_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['newsletter_id'], ['newsletters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('newsletter_generation_logs', schema=None) as batch_op:
        batch_op.create_index('ix_newsletter_logs_newsletter_id', ['newsletter_id'], unique=False)
        batch_op.create_index('ix_newsletter_logs_started_at', ['started_at'], unique=False)
        batch_op.create_index('ix_newsletter_logs_status', ['status'], unique=False)
        batch_op.create_index('ix_newsletter_logs_step', ['step_name'], unique=False)

    op.create_table('newsletter_publications',
    sa.Column('newsletter_id', sa.UUID(), nullable=False),
    sa.Column('service_name', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'SCHEDULED', 'SENT', 'FAILED', name='publishstatus'), nullable=False),
    sa.Column('external_draft_id', sa.String(length=100), nullable=True),
    sa.Column('external_email_id', sa.String(length=100), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('scheduled_send_time', sa.DateTime(), nullable=True),
    sa.Column('actual_send_time', sa.DateTime(), nullable=True),
    sa.Column('subscriber_count', sa.Integer(), nullable=True),
    sa.Column('delivered_count', sa.Integer(), nullable=True),
    sa.Column('open_count', sa.Integer(), nullable=True),
    sa.Column('click_count', sa.Integer(), nullable=True),
    sa.Column('unsubscribe_count', sa.Integer(), nullable=True),
    sa.Column('delivery_rate', sa.Float(), nullable=True),
    sa.Column('open_rate', sa.Float(), nullable=True),
    sa.Column('click_rate', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['newsletter_id'], ['newsletters.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('newsletter_id')
    )
    with op.batch_alter_table('newsletter_publications', schema=None) as batch_op:
        batch_op.create_index('ix_newsletter_publications_published_at', ['published_at'], unique=False)
        batch_op.create_index('ix_newsletter_publications_service', ['service_name'], unique=False)
        batch_op.create_index('ix_newsletter_publications_status', ['status'], unique=False)

    op.create_table('newsletter_sections',
    sa.Column('newsletter_id', sa.UUID(), nullable=False),
    sa.Column('section_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('content_html', sa.Text(), nullable=True),
    sa.Column('content_markdown', sa.Text(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('generated_by_agent', sa.String(length=100), nullable=True),
    sa.Column('generation_prompt', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['newsletter_id'], ['newsletters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('newsletter_sections', schema=None) as batch_op:
        batch_op.create_index('ix_newsletter_sections_newsletter_id', ['newsletter_id'], unique=False)
        batch_op.create_index('ix_newsletter_sections_order', ['order_index'], unique=False)
        batch_op.create_index('ix_newsletter_sections_type', ['section_type'], unique=False)

    op.create_table('discord_messages',
    sa.Column('message_id', sa.String(length=20), nullable=False),
    sa.Column('guild_id', sa.UUID(), nullable=False),
    sa.Column('channel_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('clean_content', sa.Text(), nullable=True),
    sa.Column('message_type', sa.String(length=20), nullable=False),
    sa.Column('thread_id', sa.String(length=20), nullable=True),
    sa.Column('parent_message_id', sa.String(length=20), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=False),
    sa.Column('edit_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=False),
    sa.Column('has_attachments', sa.Boolean(), nullable=False),
    sa.Column('attachment_urls', sa.JSON(), nullable=True),
    sa.Column('has_embeds', sa.Boolean(), nullable=False),
    sa.Column('embed_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['discord_users.id'], ),
    sa.ForeignKeyConstraint(['channel_id'], ['discord_channels.id'], ),
    sa.ForeignKeyConstraint(['guild_id'], ['discord_guilds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('message_id')
    )
    with op.batch_alter_table('discord_messages', schema=None) as batch_op:
        batch_op.create_index('ix_discord_messages_author_id', ['author_id'], unique=False)
        batch_op.create_index('ix_discord_messages_channel_id', ['channel_id'], unique=False)
        batch_op.create_index('ix_discord_messages_created_at', ['created_at'], unique=False)
        batch_op.create_index('ix_discord_messages_thread_id', ['thread_id'], unique=False)

    op.create_table('engagement_metrics',
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('reply_count', sa.Integer(), nullable=False),
    sa.Column('reaction_count', sa.Integer(), nullable=False),
    sa.Column('unique_reactors', sa.Integer(), nullable=False),
    sa.Column('thread_depth', sa.Integer(), nullable=False),
    sa.Column('engagement_score', sa.Float(), nullable=False),
    sa.Column('trending_score', sa.Float(), nullable=False),
    sa.Column('discussion_participants', sa.Integer(), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('peak_activity_hour', sa.Integer(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('toxicity_score', sa.Float(), nullable=True),
    sa.Column('extracted_keywords', sa.JSON(), nullable=True),
    sa.Column('topic_categories', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['discord_messages.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('message_id')
    )
    with op.batch_alter_table('engagement_metrics', schema=None) as batch_op:
        batch_op.create_index('ix_engagement_metrics_last_activity', ['last_activity'], unique=False)
        batch_op.create_index('ix_engagement_metrics_score', ['engagement_score'], unique=False)
        batch_op.create_index('ix_engagement_metrics_trending', ['trending_score'], unique=False)

    op.create_table('message_reactions',
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('emoji', sa.String(length=100), nullable=False),
    sa.Column('emoji_id', sa.String(length=20), nullable=True),
    sa.Column('is_custom', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['discord_messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['discord_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('message_id', 'user_id', 'emoji', name='unique_reaction')
    )
    with op.batch_alter_table('message_reactions', schema=None) as batch_op:
        batch_op.create_index('ix_message_reactions_message_id', ['message_id'], unique=False)
        batch_op.create_index('ix_message_reactions_user_id', ['user_id'], unique=False)

    op.create_table('newsletter_discussions',
    sa.Column('newsletter_id', sa.UUID(), nullable=False),
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('discussion_title', sa.String(length=200), nullable=False),
    sa.Column('discussion_summary', sa.Text(), nullable=False),
    sa.Column('key_points', sa.JSON(), nullable=True),
    sa.Column('technical_analysis', sa.Text(), nullable=True),
    sa.Column('expert_opinion', sa.Text(), nullable=True),
    sa.Column('engagement_score_snapshot', sa.Float(), nullable=False),
    sa.Column('participant_count_snapshot', sa.Integer(), nullable=False),
    sa.Column('fact_check_results', sa.JSON(), nullable=True),
    sa.Column('additional_research', sa.Text(), nullable=True),
    sa.Column('research_sources', sa.JSON(), nullable=True),
    sa.Column('inclusion_reason', sa.Text(), nullable=False),
    sa.Column('priority_score', sa.Float(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['discord_messages.id'], ),
    sa.ForeignKeyConstraint(['newsletter_id'], ['newsletters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('newsletter_discussions', schema=None) as batch_op:
        batch_op.create_index('ix_newsletter_discussions_message_id', ['message_id'], unique=False)
        batch_op.create_index('ix_newsletter_discussions_newsletter_id', ['newsletter_id'], unique=False)
        batch_op.create_index('ix_newsletter_discussions_priority', ['priority_score'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('newsletter_discussions', schema=None) as batch_op:
        batch_op.drop_index('ix_newsletter_discussions_priority')
        batch_op.drop_index('ix_newsletter_discussions_newsletter_id')
        batch_op.drop_index('ix_newsletter_discussions_message_id')

    op.drop_table('newsletter_discussions')
    with op.batch_alter_table('message_reactions', schema=None) as batch_op:
        batch_op.drop_index('ix_message_reactions_user_id')
        batch_op.drop_index('ix_message_reactions_message_id')

    op.drop_table('message_reactions')
    with op.batch_alter_table('engagement_metrics', schema=None) as batch_op:
        batch_op.drop_index('ix_engagement_metrics_trending')
        batch_op.drop_index('ix_engagement_metrics_score')
        batch_op.drop_index('ix_engagement_metrics_last_activity')

    op.drop_table('engagement_metrics')
    with op.batch_alter_table('discord_messages', schema=None) as batch_op:
        batch_op.drop_index('ix_discord_messages_thread_id')
        batch_op.drop_index('ix_discord_messages_created_at')
        batch_op.drop_index('ix_discord_messages_channel_id')
        batch_op.drop_index('ix_discord_messages_author_id')

    op.drop_table('discord_messages')
    with op.batch_alter_table('newsletter_sections', schema=None) as batch_op:
        batch_op.drop_index('ix_newsletter_sections_type')
        batch_op.drop_index('ix_newsletter_sections_order')
        batch_op.drop_index('ix_newsletter_sections_newsletter_id')

    op.drop_table('newsletter_sections')
    with op.batch_alter_table('newsletter_publications', schema=None) as batch_op:
        batch_op.drop_index('ix_newsletter_publications_status')
        batch_op.drop_index('ix_newsletter_publications_service')
        batch_op.drop_index('ix_newsletter_publications_published_at')

    op.drop_table('newsletter_publications')
    with op.batch_alter_table('newsletter_generation_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_newsletter_logs_step')
        batch_op.drop_index('ix_newsletter_logs_status')
        batch_op.drop_index('ix_newsletter_logs_started_at')
        batch_op.drop_index('ix_newsletter_logs_newsletter_id')

    op.drop_table('newsletter_generation_logs')
    with op.batch_alter_table('discord_channels', schema=None) as batch_op:
        batch_op.drop_index('ix_discord_channels_guild_id')

    op.drop_table('discord_channels')
    with op.batch_alter_table('newsletters', schema=None) as batch_op:
        batch_op.drop_index('ix_newsletters_type')
        batch_op.drop_index('ix_newsletters_status')
        batch_op.drop_index('ix_newsletters_scheduled_for')
        batch_op.drop_index('ix_newsletters_created_at')

    op.drop_table('newsletters')
    op.drop_table('discord_users')
    op.drop_table('discord_guilds')
    # ### end Alembic commands ###